export interface twitterOptions {
    /**  The twitter username to tweet at */
    twitterUsername: string;
}
export interface homepageOptions {
    /** The page url that the badge will be for */
    homepage: string;
}
export interface githubUsernameOptions {
    /** The github username to use */
    githubUsername: string;
}
export interface githubSlugOptions {
    /** The github slug of the project (e.g. bevry/badges) */
    githubSlug: string;
}
export interface npmOptions {
    /** The npm package name */
    npmPackageName: string;
}
export interface badgeOptions {
    /** The URL to the image **/
    image?: string;
    /** The alt attribute for the image */
    alt?: string;
    /** The URL for the link */
    url?: string;
    /** The title attribute for the link */
    title?: string;
}
/** Generate a HTML badge */
export declare function badge({ image, alt, url, title }: badgeOptions): string;
export declare namespace badge {
    var badgeCategory: string;
}
export interface shieldsOptions {
    /** The text for the left side of the badge */
    left: string;
    /** The text for the right side of the badge */
    right: string;
    /** The color for the badge */
    color?: string;
    /** The alt attribute for the image */
    alt?: string;
    /** The URL for the link */
    url?: string;
    /** The title attribute for the link */
    title?: string;
}
/** Shields Custom Badge */
export declare function shields({ left, right, color, alt, url, title, }: shieldsOptions): string;
export declare namespace shields {
    var badgeCategory: string;
}
export interface npmversionOptions {
    /** The repository slug (username/reponame) */
    npmPackageName: string;
}
/** NPM Version Badge */
export declare function npmversion({ npmPackageName }: npmversionOptions): string;
export declare namespace npmversion {
    var badgeCategory: string;
}
/** NPM Downloads Badge */
export declare function npmdownloads({ npmPackageName }: npmOptions): string;
export declare namespace npmdownloads {
    var badgeCategory: string;
}
/** David DM Dependencies Badge */
export declare function daviddm({ githubSlug }: githubSlugOptions): string;
export declare namespace daviddm {
    var badgeCategory: string;
}
/** David DM Dev Dependencies Badge */
export declare function daviddmdev({ githubSlug }: githubSlugOptions): string;
export declare namespace daviddmdev {
    var badgeCategory: string;
}
export interface nodeicoOptions extends npmOptions {
    /**
     * See https://nodei.co for options
     * defined as either a string `param1=&param2=`
     * or an object `{param1: '', param2: ''}` that will be serialized to `param1=&param2=` etc.
     */
    nodeicoQueryString?: string | {
        [index: string]: any;
    };
}
/** Nodei.co Badge */
export declare function nodeico({ npmPackageName, nodeicoQueryString, }: nodeicoOptions): string;
export declare namespace nodeico {
    var badgeCategory: string;
}
export interface saucelabsOptions {
    /** The username of the sauncelabs account to use */
    saucelabsUsername: string;
    /** Falls back to the `SAUCELABS_AUTH_TOKEN` environment variable if it is set */
    saucelabsAuthToken?: string;
}
/** Sauce Labs Browser Matrix Badge */
export declare function saucelabsbm({ saucelabsUsername, saucelabsAuthToken, }: saucelabsOptions): string;
export declare namespace saucelabsbm {
    var badgeCategory: string;
    var badgeInline: boolean;
}
/** Sauce Labs Badge */
export declare function saucelabs({ saucelabsUsername, saucelabsAuthToken, }: saucelabsOptions): string;
export declare namespace saucelabs {
    var badgeCategory: string;
}
export interface travisOptions extends githubSlugOptions {
    /** The TLD to use for travis, use "com" if you have moved to travis-ci.com instead of travis-ci.org */
    travisTLD?: string;
}
/** Travis CI Badge */
export declare function travisci({ githubSlug, travisTLD, }: travisOptions): string;
export declare namespace travisci {
    var badgeCategory: string;
}
export interface codeshipOptions {
    /** The UUID for a specific project, which is available on the General tab in your project settings */
    codeshipProjectUUID: string;
    /** The ID for a specific project, which is available via the URL for the codeship project page */
    codeshipProjectID: string;
}
/** Codeship Badge */
export declare function codeship({ codeshipProjectUUID, codeshipProjectID, }: codeshipOptions): string;
export declare namespace codeship {
    var badgeCategory: string;
}
/** Coveralls Badge */
export declare function coveralls({ githubSlug }: githubSlugOptions): string;
export declare namespace coveralls {
    var badgeCategory: string;
}
/** Code Climate Rating Badge */
export declare function codeclimate({ githubSlug }: githubSlugOptions): string;
export declare namespace codeclimate {
    var badgeCategory: string;
}
/** BitHound Score Badge */
export declare function bithound({ githubSlug }: githubSlugOptions): string;
export declare namespace bithound {
    var badgeCategory: string;
}
/** Waffle Badge */
export declare function waffle({ githubSlug }: githubSlugOptions): string;
export declare namespace waffle {
    var badgeCategory: string;
}
export interface githubworkflowOptions extends githubSlugOptions {
    /** The name or location of the workflow file to show the badge for */
    githubWorkflow: string;
    /** The branch to constrain the badge to */
    githubBranch?: string;
    /** The event to constrain the badge to */
    githubEvent?: string;
}
/** Github Workflow Badge */
export declare function githubworkflow({ githubWorkflow, githubBranch, githubEvent, githubSlug, }: githubworkflowOptions): string;
export declare namespace githubworkflow {
    var badgeCategory: string;
}
/** At least one of the properties must be provided */
export interface sixtydevOptions {
    /** The 60devs username to donate to */
    sixtydevstipsID?: string;
    /** The url to the 60devs donate page */
    sixtydevstipsURL?: string;
}
/** 60devs Tips Badge */
export declare function sixtydevstips({ sixtydevstipsID, sixtydevstipsURL, }: sixtydevOptions): string;
export declare namespace sixtydevstips {
    var badgeCategory: string;
}
/** At least one of the properties must be provided */
export interface githubsponsorsOptions {
    /** The url to the GitHub donate page */
    githubSponsorsURL?: string;
    /** The GitHub username to donate to */
    githubSponsorsUsername?: string;
    /** The GitHub username fallback to donate to */
    githubUsername?: string;
}
/** Github Sponsors Badge */
export declare function githubsponsors({ githubSponsorsURL, githubSponsorsUsername, githubUsername, }: githubsponsorsOptions): string;
export declare namespace githubsponsors {
    var badgeCategory: string;
}
/** At least one of the properties must be provided */
export interface thanksdevOptions {
    /** The url to the ThanksDev donate page */
    thanksdevURL?: string;
    /** The GitHub username to donate to */
    thanksdevGithubUsername?: string;
    /** The GitHub username fallback to donate to */
    githubUsername?: string;
}
/** ThanksDev Badge */
export declare function thanksdev({ thanksdevURL, thanksdevGithubUsername, githubUsername, }: thanksdevOptions): string;
export declare namespace thanksdev {
    var badgeCategory: string;
}
/** At least one of the properties must be provided */
export interface patreonOptions {
    /** The Patreon username to donate to */
    patreonUsername?: string;
    /** The url to the Patreon donate page */
    patreonURL?: string;
}
/** Patreon Badge */
export declare function patreon({ patreonUsername, patreonURL, }: patreonOptions): string;
export declare namespace patreon {
    var badgeCategory: string;
}
/** At least one of the properties must be provided */
export interface opencollectiveOptions {
    /** The Open Collective username to donate to */
    opencollectiveUsername?: string;
    /** The url to the Open Collective donate page */
    opencollectiveURL?: string;
}
/** Open Collective Badge */
export declare function opencollective({ opencollectiveUsername, opencollectiveURL, }: opencollectiveOptions): string;
export declare namespace opencollective {
    var badgeCategory: string;
}
/** At least one of the properties must be provided */
export interface gratipayOptions {
    /** The Gratipay username to donate to */
    gratipayUsername?: string;
    /** The url to the Gratipay donate page */
    gratipayURL?: string;
}
/** Gratipay Badge */
export declare function gratipay({ gratipayUsername, gratipayURL, }: gratipayOptions): string;
export declare namespace gratipay {
    var badgeCategory: string;
}
/** At least one of the properties must be provided */
export interface flattrOptions {
    /** The Flattr code to donate to (e.g. 344188/balupton-on-Flattr) */
    flattrCode?: string;
    /** The Flattr username to donate to (e.g. balupton) */
    flattrUsername?: string;
    /** The url to the flattr donate page */
    flattrURL?: string;
}
/** Flattr Badge */
export declare function flattr({ flattrCode, flattrUsername, flattrURL, }: flattrOptions): string;
export declare namespace flattr {
    var badgeCategory: string;
}
/** At least one of the properties must be provided */
export interface paypalOptions {
    /**  The url to the paypal donate page */
    paypalURL?: string;
    /**  The Paypal button id */
    paypalButtonID?: string;
    /**  The Paypal.me username */
    paypalUsername?: string;
}
/** Paypal Badge */
export declare function paypal({ paypalURL, paypalButtonID, paypalUsername, }: paypalOptions): string;
export declare namespace paypal {
    var badgeCategory: string;
}
export interface cryptoOptions {
    /** The url to the crypto donation page */
    cryptoURL: string;
    /** @deprecated */
    bitcoinURL?: string;
}
/** Crypto Badge */
export declare function crypto({ cryptoURL, bitcoinURL }: cryptoOptions): string;
export declare namespace crypto {
    var badgeCategory: string;
}
/** @deprecated */
export declare function bitcoin(opts: cryptoOptions): string;
export declare namespace bitcoin {
    var badgeCategory: string;
}
export interface wishlistOptions {
    /** The url to the wishlist page */
    wishlistURL: string;
}
/** Wishlist Badge */
export declare function wishlist({ wishlistURL }: wishlistOptions): string;
export declare namespace wishlist {
    var badgeCategory: string;
}
/** At least one of the properties must be provided */
export interface buymeacoffeeOptions {
    /**  The Buy Me A Coffee username to donate to */
    buymeacoffeeUsername?: string;
    /**  The url to the Buy Me A Coffee donate page */
    buymeacoffeeURL?: string;
}
/** Buy Me A Coffee Badge */
export declare function buymeacoffee({ buymeacoffeeUsername, buymeacoffeeURL, }: buymeacoffeeOptions): string;
export declare namespace buymeacoffee {
    var badgeCategory: string;
}
/** At least one of the properties must be provided */
export interface liberapayOptions {
    /** The Liberapay username to donate to */
    liberapayUsername?: string;
    /** The url to the Liberapay donate page */
    liberapayURL?: string;
}
/** Liberapay Badge */
export declare function liberapay({ liberapayUsername, liberapayURL, }: liberapayOptions): string;
export declare namespace liberapay {
    var badgeCategory: string;
}
/** At least one of the properties must be provided */
export interface thanksappOptions {
    /** The repository slug (username/reponame) */
    npmPackageName?: string;
    /** The github slug that the project lives at (e.g. bevry/badges) */
    githubSlug?: string;
    /** The username for the Thanks App donate page */
    thanksappUsername?: string;
    /** The url to the Thanks App donate page */
    thanksappURL?: string;
}
/** Thanks App Badge */
export declare function thanksapp({ npmPackageName, githubSlug, thanksappUsername, thanksappURL, }: thanksappOptions): string;
export declare namespace thanksapp {
    var badgeCategory: string;
}
/** Boost Lab Badge */
export declare function boostlab({ githubSlug }: githubSlugOptions): string;
export declare namespace boostlab {
    var badgeCategory: string;
}
export interface slackinOptions {
    /** The slackin url (e.g. https://slack.bevry.me) */
    slackinURL: string;
}
/** Slackin Script Badge */
export declare function slackinscript({ slackinURL }: slackinOptions): string;
export declare namespace slackinscript {
    var badgeCategory: string;
    var badgeScript: boolean;
}
/** Slackin Badge */
export declare function slackin({ slackinURL }: slackinOptions): string;
export declare namespace slackin {
    var badgeCategory: string;
}
export interface gabeaconOptions {
    /**  The google analytics tracing id (e.g. UA-XXXXX-XX) */
    gaTrackingID: string;
    /**  The github slug that the project lives at (e.g. bevry/badges) */
    githubSlug: string;
}
/**
 * Google Analytics Beacon Badge
 * https://github.com/igrigorik/ga-beacon
 */
export declare function gabeacon({ gaTrackingID, githubSlug, }: gabeaconOptions): string;
export declare namespace gabeacon {
    var badgeCategory: string;
}
/** Google Plus One Button */
export declare function googleplusone({ homepage }: homepageOptions): string;
export declare namespace googleplusone {
    var badgeCategory: string;
    var badgeScript: boolean;
}
/** Reddit Submit Button */
export declare function redditsubmit({ homepage }: homepageOptions): string;
export declare namespace redditsubmit {
    var badgeCategory: string;
    var badgeScript: boolean;
}
/** Hacker News Submit Button */
export declare function hackernewssubmit({ homepage }: homepageOptions): string;
export declare namespace hackernewssubmit {
    var badgeCategory: string;
    var badgeScript: boolean;
}
export interface facebooklikeOptions extends homepageOptions {
    /** The facebook application id that the badge is for, defaults to the environment variable `FACEBOOK_APPLICATION_ID` */
    facebookApplicationID?: string;
}
/** Facebook Like Button */
export declare function facebooklike({ homepage, facebookApplicationID, }: facebooklikeOptions): string;
export declare namespace facebooklike {
    var badgeCategory: string;
    var badgeScript: boolean;
}
export interface facebookfollowOptions {
    /** The facebook username to follow */
    facebookUsername: string;
    /** The facebook application id that the badge is for, defaults to the environment variable `FACEBOOK_APPLICATION_ID` */
    facebookApplicationID?: string;
}
/** Facebook Follow Button */
export declare function facebookfollow({ facebookUsername, facebookApplicationID, }: facebookfollowOptions): string;
export declare namespace facebookfollow {
    var badgeCategory: string;
    var badgeScript: boolean;
}
/** Twitter Tweet Button */
export declare function twittertweet({ twitterUsername }: twitterOptions): string;
export declare namespace twittertweet {
    var badgeCategory: string;
    var badgeScript: boolean;
}
/** Twitter Follow Button */
export declare function twitterfollow({ twitterUsername }: twitterOptions): string;
export declare namespace twitterfollow {
    var badgeCategory: string;
    var badgeScript: boolean;
}
/** Github Follow Button */
export declare function githubfollow({ githubUsername, }: githubUsernameOptions): string;
export declare namespace githubfollow {
    var badgeCategory: string;
    var badgeScript: boolean;
}
/** GitHub Star Button */
export declare function githubstar({ githubSlug }: githubSlugOptions): string;
export declare namespace githubstar {
    var badgeCategory: string;
    var badgeScript: boolean;
}
export interface quoraOptions {
    /**  The quora user to follow */
    quoraUsername: string;
    /**  The quora user's name */
    quoraRealname?: string;
    /**  Some code */
    quoraCode?: string;
}
/** Quora Follow Button */
export declare function quorafollow({ quoraUsername, quoraRealname, quoraCode, }: quoraOptions): string;
export declare namespace quorafollow {
    var badgeCategory: string;
    var badgeScript: boolean;
}
//# sourceMappingURL=badges.d.ts.map